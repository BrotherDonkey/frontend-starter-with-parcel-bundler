$user-text-direction: ltr !default;
$content-text-direction: ltr !default;

$user-left: if($user-text-direction == rtl, right, left);
$user-right: if($user-text-direction == rtl, left, right);

$content-left: if($content-text-direction == rtl, right, left);
$content-right: if($content-text-direction == rtl, left, right);

$spacing-0: 0 !default; // 0
$spacing-1: .25rem !default; // 4px
$spacing-2: .5rem !default; // 8px
$spacing-3: 1rem !default; // 16px
$spacing-4: 1.5rem !default; // 24px
$spacing-5: 3rem !default; // 48px
$spacing-6: 6rem !default; // 96px;

// modified below

$marginKey: 'margin';
$paddingKey: 'padding';
$separator: '-';

$class-positions: (
	('top',
	'right',
	'bottom',
	'left')
);

$content-positions: (
    ('top',
    $content-right,
    'bottom',
    $content-left)
);

$user-positions: (
    ('top',
    $user-right,
    'bottom',
    $user-left)
);

$spacing-sizes: (
	('none', $spacing-0),
	('extra-small', $spacing-1),
	('small', $spacing-2),
	('medium', $spacing-3),
	('large', $spacing-4),
	('extra-large', $spacing-5),
	('super-large', $spacing-6)
);

@function sizeValue($key, $value) {
	@return if($key == 'none', 0, $value);
}

@each $size in $spacing-sizes {
	$sizeKey: nth($size, 1);
	$sizeValue: nth($size, 2);

	// .has-margin-large

	.has-#{$marginKey}#{$separator}#{$sizeKey} {
		margin: sizeValue($sizeKey, $sizeValue) !important;
	}

	// .has-padding-medium

	.has-#{$paddingKey}#{$separator}#{$sizeKey} {
		padding: sizeValue($sizeKey, $sizeValue) !important;
	}

	@include mobile {

		.has-#{$marginKey}#{$separator}#{$sizeKey}-mobile {
			margin: sizeValue($sizeKey, $sizeValue) !important;
		}

		.has-#{$paddingKey}#{$separator}#{$sizeKey}-mobile {
			padding: sizeValue($sizeKey, $sizeValue) !important;
		}
	}

	@for $i from 1 through 4 {
        $class-position: nth($class-positions, $i);
        $content-position: nth($content-positions, $i);
        $user-position: nth($user-positions, $i);

        // default margin-padding-helpers affect content

		// .has-margin-top-large

		.has-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey} {
			margin-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
		}

		// .has-padding-bottom-extra-small

		.has-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey} {
			padding-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
		}

		@include desktop {

			.has-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop {
				margin-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop {
				padding-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop-not-interactive {
				@include not-interactive {
					margin-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
				}
			}
		}

		@include tablet {

			.has-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-tablet {
				margin-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-tablet {
				padding-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}

		@include mobile {

			.has-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-mobile {
				margin-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-mobile {
				padding-#{$content-position}: sizeValue($sizeKey, $sizeValue) !important;
			}
        }

        // -user- margin and padding helpers affect chrome

        // .has-margin-top-large

        // .has-user-margin-left-none

		.has-user-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey} {
			margin-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
		}

		// .has-user-padding-bottom-extra-small

		.has-user-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey} {
			padding-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
		}

		@include desktop {

			.has-user-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop {
				margin-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-user-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop {
				padding-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-user-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-desktop-not-interactive {
				@include not-interactive {
					margin-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
				}
			}
		}

		@include tablet {

			.has-user-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-tablet {
				margin-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-user-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-tablet {
				padding-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}

		@include mobile {

			.has-user-#{$marginKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-mobile {
				margin-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}

			.has-user-#{$paddingKey}#{$separator}#{$class-position}#{$separator}#{$sizeKey}-mobile {
				padding-#{$user-position}: sizeValue($sizeKey, $sizeValue) !important;
			}
		}
	}
}